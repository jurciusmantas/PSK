// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSK.DB.Contexts;

namespace PSK.DB.Migrations
{
    [DbContext(typeof(PSKDbContext))]
    [Migration("20200601193515_PresentationDataSeed")]
    partial class PresentationDataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PSK.Model.Entities.Day", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TopicId");

                    b.ToTable("Days");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2020, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            TopicId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2020, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            TopicId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2020, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            TopicId = 1
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2020, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            TopicId = 1
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2020, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            TopicId = 2
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2020, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            TopicId = 2
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2020, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            TopicId = 2
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2020, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            TopicId = 4
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2020, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            TopicId = 4
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2020, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 9,
                            TopicId = 1
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateTime(2020, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 9,
                            TopicId = 1
                        },
                        new
                        {
                            Id = 12,
                            Date = new DateTime(2020, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            TopicId = 1
                        },
                        new
                        {
                            Id = 13,
                            Date = new DateTime(2020, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            TopicId = 1
                        },
                        new
                        {
                            Id = 14,
                            Date = new DateTime(2020, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            TopicId = 2
                        },
                        new
                        {
                            Id = 15,
                            Date = new DateTime(2020, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            TopicId = 2
                        },
                        new
                        {
                            Id = 16,
                            Date = new DateTime(2020, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            TopicId = 16
                        },
                        new
                        {
                            Id = 17,
                            Date = new DateTime(2020, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            TopicId = 4
                        },
                        new
                        {
                            Id = 18,
                            Date = new DateTime(2020, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            TopicId = 4
                        },
                        new
                        {
                            Id = 19,
                            Date = new DateTime(2020, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 8,
                            TopicId = 3
                        },
                        new
                        {
                            Id = 20,
                            Date = new DateTime(2020, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            TopicId = 3
                        },
                        new
                        {
                            Id = 21,
                            Date = new DateTime(2020, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            TopicId = 3
                        },
                        new
                        {
                            Id = 22,
                            Date = new DateTime(2020, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            TopicId = 20
                        },
                        new
                        {
                            Id = 23,
                            Date = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            TopicId = 19
                        },
                        new
                        {
                            Id = 24,
                            Date = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            TopicId = 18
                        },
                        new
                        {
                            Id = 25,
                            Date = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            TopicId = 4
                        },
                        new
                        {
                            Id = 26,
                            Date = new DateTime(2020, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            TopicId = 5
                        },
                        new
                        {
                            Id = 27,
                            Date = new DateTime(2020, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            TopicId = 3
                        },
                        new
                        {
                            Id = 28,
                            Date = new DateTime(2020, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            TopicId = 3
                        },
                        new
                        {
                            Id = 29,
                            Date = new DateTime(2020, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            TopicId = 3
                        },
                        new
                        {
                            Id = 30,
                            Date = new DateTime(2020, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            TopicId = 20
                        },
                        new
                        {
                            Id = 31,
                            Date = new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            TopicId = 14
                        },
                        new
                        {
                            Id = 32,
                            Date = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            TopicId = 13
                        });
                });

            modelBuilder.Entity("PSK.Model.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("LeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            Name = "admin",
                            Password = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "vladas@gmail.com",
                            LeaderId = 1,
                            Name = "vladas",
                            Password = "vladas"
                        },
                        new
                        {
                            Id = 3,
                            Email = "ona@gmail.com",
                            LeaderId = 1,
                            Name = "ona",
                            Password = "ona"
                        },
                        new
                        {
                            Id = 4,
                            Email = "ema@gmail.com",
                            LeaderId = 2,
                            Name = "ema",
                            Password = "ema"
                        },
                        new
                        {
                            Id = 5,
                            Email = "matas@gmail.com",
                            LeaderId = 2,
                            Name = "matas",
                            Password = "matas"
                        },
                        new
                        {
                            Id = 6,
                            Email = "zita@gmail.com",
                            LeaderId = 5,
                            Name = "zita",
                            Password = "zita"
                        },
                        new
                        {
                            Id = 7,
                            Email = "gerda@gmail.com",
                            LeaderId = 1,
                            Name = "gerda",
                            Password = "gNtzUNfmP4zx17KZqhZOVrRZq7LlEtjihxgifaD++coEGt4R"
                        },
                        new
                        {
                            Id = 8,
                            Email = "jonas@gmail.com",
                            LeaderId = 1,
                            Name = "jonas",
                            Password = "dwuCXS1FIDzjkkQ+9KlFKdwZf7zwMzwChWj5TaqrZklsu8NS"
                        },
                        new
                        {
                            Id = 9,
                            Email = "elena@gmail.com",
                            LeaderId = 2,
                            Name = "elena",
                            Password = "CB4ltXA0mmqJy/8y5xq+cNqBJ95ykdJ17JT1amz1JuMHTpke"
                        },
                        new
                        {
                            Id = 10,
                            Email = "vytas@gmail.com",
                            LeaderId = 1,
                            Name = "vytas",
                            Password = "WJhLLap3r2gIReQyuqplu/UpE8LCjg7gCquuKomeEnVNhhL8"
                        });
                });

            modelBuilder.Entity("PSK.Model.Entities.EmployeeRestriction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RestrictionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RestrictionId");

                    b.ToTable("EmployeeRestriction");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 2,
                            RestrictionId = 1
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 3,
                            RestrictionId = 1
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 4,
                            RestrictionId = 1
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 5,
                            RestrictionId = 1
                        },
                        new
                        {
                            Id = 5,
                            EmployeeId = 6,
                            RestrictionId = 1
                        },
                        new
                        {
                            Id = 6,
                            EmployeeId = 7,
                            RestrictionId = 1
                        },
                        new
                        {
                            Id = 7,
                            EmployeeId = 8,
                            RestrictionId = 1
                        },
                        new
                        {
                            Id = 8,
                            EmployeeId = 9,
                            RestrictionId = 1
                        },
                        new
                        {
                            Id = 9,
                            EmployeeId = 10,
                            RestrictionId = 1
                        },
                        new
                        {
                            Id = 10,
                            EmployeeId = 2,
                            RestrictionId = 2
                        },
                        new
                        {
                            Id = 11,
                            EmployeeId = 3,
                            RestrictionId = 2
                        },
                        new
                        {
                            Id = 12,
                            EmployeeId = 7,
                            RestrictionId = 2
                        },
                        new
                        {
                            Id = 13,
                            EmployeeId = 10,
                            RestrictionId = 2
                        },
                        new
                        {
                            Id = 14,
                            EmployeeId = 2,
                            RestrictionId = 3
                        },
                        new
                        {
                            Id = 15,
                            EmployeeId = 10,
                            RestrictionId = 3
                        },
                        new
                        {
                            Id = 16,
                            EmployeeId = 4,
                            RestrictionId = 4
                        },
                        new
                        {
                            Id = 17,
                            EmployeeId = 5,
                            RestrictionId = 4
                        },
                        new
                        {
                            Id = 18,
                            EmployeeId = 9,
                            RestrictionId = 4
                        });
                });

            modelBuilder.Entity("PSK.Model.Entities.EmployeesToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeesTokens");
                });

            modelBuilder.Entity("PSK.Model.Entities.IncomingEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("LeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.ToTable("IncomingEmployees");
                });

            modelBuilder.Entity("PSK.Model.Entities.Recommendation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("TopicId");

                    b.ToTable("Recommendations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatorId = 2,
                            ReceiverId = 4,
                            TopicId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatorId = 2,
                            ReceiverId = 4,
                            TopicId = 4
                        },
                        new
                        {
                            Id = 3,
                            CreatorId = 1,
                            ReceiverId = 2,
                            TopicId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatorId = 1,
                            ReceiverId = 3,
                            TopicId = 5
                        },
                        new
                        {
                            Id = 5,
                            CreatorId = 1,
                            ReceiverId = 4,
                            TopicId = 6
                        },
                        new
                        {
                            Id = 6,
                            CreatorId = 2,
                            ReceiverId = 5,
                            TopicId = 7
                        },
                        new
                        {
                            Id = 7,
                            CreatorId = 1,
                            ReceiverId = 9,
                            TopicId = 8
                        },
                        new
                        {
                            Id = 8,
                            CreatorId = 1,
                            ReceiverId = 8,
                            TopicId = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatorId = 1,
                            ReceiverId = 2,
                            TopicId = 8
                        },
                        new
                        {
                            Id = 10,
                            CreatorId = 1,
                            ReceiverId = 3,
                            TopicId = 9
                        },
                        new
                        {
                            Id = 11,
                            CreatorId = 2,
                            ReceiverId = 5,
                            TopicId = 10
                        },
                        new
                        {
                            Id = 12,
                            CreatorId = 2,
                            ReceiverId = 5,
                            TopicId = 14
                        });
                });

            modelBuilder.Entity("PSK.Model.Entities.Restriction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ConsecutiveDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("Global")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxDaysPerMonth")
                        .HasColumnType("int");

                    b.Property<int>("MaxDaysPerQuarter")
                        .HasColumnType("int");

                    b.Property<int>("MaxDaysPerYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Restrictions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConsecutiveDays = 3,
                            CreationDate = new DateTime(2020, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = 1,
                            Global = true,
                            MaxDaysPerMonth = 3,
                            MaxDaysPerQuarter = 9,
                            MaxDaysPerYear = 36
                        },
                        new
                        {
                            Id = 2,
                            ConsecutiveDays = 3,
                            CreationDate = new DateTime(2020, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = 1,
                            Global = false,
                            MaxDaysPerMonth = 4,
                            MaxDaysPerQuarter = 12,
                            MaxDaysPerYear = 48
                        },
                        new
                        {
                            Id = 3,
                            ConsecutiveDays = 3,
                            CreationDate = new DateTime(2020, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = 1,
                            Global = false,
                            MaxDaysPerMonth = 3,
                            MaxDaysPerQuarter = 16,
                            MaxDaysPerYear = 30
                        },
                        new
                        {
                            Id = 4,
                            ConsecutiveDays = 5,
                            CreationDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = 2,
                            Global = false,
                            MaxDaysPerMonth = 5,
                            MaxDaysPerQuarter = 15,
                            MaxDaysPerYear = 60
                        });
                });

            modelBuilder.Entity("PSK.Model.Entities.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(12000)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ParentTopicId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    b.HasKey("Id");

                    b.HasIndex("ParentTopicId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This course is about Java EE. Read more in https://www.oracle.com/java/technologies/java-ee-glance.html",
                            Name = "Java EE"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Java EE JPA course: https://www.javaworld.com/article/3379043/what-is-jpa-introduction-to-the-java-persistence-api.html",
                            Name = "Java EE JPA",
                            ParentTopicId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Java EE CDI course: https://www.baeldung.com/java-ee-cdi",
                            Name = "Java EE CDI",
                            ParentTopicId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Link https://www.w3schools.com/cs/",
                            Name = "C# tutorials"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Link https://www.javaworld.com/article/3379043/what-is-jpa-introduction-to-the-java-persistence-api.html",
                            Name = "Java EE JPA.Introduction",
                            ParentTopicId = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "Link http://www.thejavageek.com/2014/01/12/jpa-crud-example/",
                            Name = "Java EE JPA.CRUD Example",
                            ParentTopicId = 2
                        },
                        new
                        {
                            Id = 7,
                            Description = "Link https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/",
                            Name = "C# LINQ",
                            ParentTopicId = 4
                        },
                        new
                        {
                            Id = 8,
                            Description = "Documentation: https://docs.microsoft.com/en-us/ef/",
                            Name = "C# Entity Framework",
                            ParentTopicId = 4
                        },
                        new
                        {
                            Id = 9,
                            Description = "Link https://docs.microsoft.com/en-us/ef/ef6/modeling/code-first/workflows/new-database",
                            Name = "C# EF Code first",
                            ParentTopicId = 8
                        },
                        new
                        {
                            Id = 10,
                            Description = "Link https://docs.microsoft.com/en-us/ef/ef6/modeling/designer/workflows/database-first",
                            Name = "C# EF DB first",
                            ParentTopicId = 8
                        },
                        new
                        {
                            Id = 11,
                            Description = "Link https://www.w3schools.com/sql/",
                            Name = "SQL"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Link https://www.mysql.com/",
                            Name = "MySQL",
                            ParentTopicId = 11
                        },
                        new
                        {
                            Id = 13,
                            Description = "Link https://www.postgresql.org/",
                            Name = "PostgreSQL",
                            ParentTopicId = 11
                        },
                        new
                        {
                            Id = 14,
                            Description = "Link https://dev.mysql.com/doc/refman/8.0/en/creating-database.html",
                            Name = "MySQL DB creation",
                            ParentTopicId = 12
                        },
                        new
                        {
                            Id = 15,
                            Description = "Link https://dev.mysql.com/doc/refman/8.0/en/trigger-syntax.html",
                            Name = "MySQL Triggers",
                            ParentTopicId = 12
                        },
                        new
                        {
                            Id = 16,
                            Description = "Link https://dev.mysql.com/doc/mysql-tutorial-excerpt/8.0/en/examples.html",
                            Name = "MySQL Queries",
                            ParentTopicId = 12
                        },
                        new
                        {
                            Id = 17,
                            Description = "Link https://dev.mysql.com/doc/refman/8.0/en/select.html",
                            Name = "MySQL Select",
                            ParentTopicId = 16
                        },
                        new
                        {
                            Id = 18,
                            Description = "Link https://www.w3schools.com/sql/sql_insert.asp",
                            Name = "MySQL Insert Into",
                            ParentTopicId = 16
                        },
                        new
                        {
                            Id = 19,
                            Description = "Link https://www.w3schools.com/sql/sql_update.asp",
                            Name = "MySQL Update",
                            ParentTopicId = 16
                        },
                        new
                        {
                            Id = 20,
                            Description = "Link https://www.w3schools.com/sql/sql_join.asp",
                            Name = "MySQL Select with Join",
                            ParentTopicId = 17
                        },
                        new
                        {
                            Id = 21,
                            Description = "Link https://www.w3schools.com/php/php_mysql_select_limit.asp",
                            Name = "MySQL Select with Limit",
                            ParentTopicId = 17
                        },
                        new
                        {
                            Id = 22,
                            Description = "Link https://dev.mysql.com/doc/refman/8.0/en/delete.html",
                            Name = "MySQL Delete",
                            ParentTopicId = 16
                        });
                });

            modelBuilder.Entity("PSK.Model.Entities.TopicCompletion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CompletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TopicId");

                    b.ToTable("TopicCompletions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompletedOn = new DateTime(2020, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            TopicId = 3
                        },
                        new
                        {
                            Id = 2,
                            CompletedOn = new DateTime(2020, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            TopicId = 4
                        },
                        new
                        {
                            Id = 3,
                            CompletedOn = new DateTime(2020, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            TopicId = 3
                        },
                        new
                        {
                            Id = 4,
                            CompletedOn = new DateTime(2020, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            TopicId = 3
                        },
                        new
                        {
                            Id = 5,
                            CompletedOn = new DateTime(2020, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            TopicId = 3
                        },
                        new
                        {
                            Id = 6,
                            CompletedOn = new DateTime(2020, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            TopicId = 20
                        },
                        new
                        {
                            Id = 7,
                            CompletedOn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            TopicId = 19
                        },
                        new
                        {
                            Id = 8,
                            CompletedOn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            TopicId = 18
                        },
                        new
                        {
                            Id = 9,
                            CompletedOn = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            TopicId = 4
                        },
                        new
                        {
                            Id = 10,
                            CompletedOn = new DateTime(2020, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            TopicId = 5
                        },
                        new
                        {
                            Id = 11,
                            CompletedOn = new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            TopicId = 14
                        },
                        new
                        {
                            Id = 12,
                            CompletedOn = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            TopicId = 13
                        });
                });

            modelBuilder.Entity("PSK.Model.Entities.Day", b =>
                {
                    b.HasOne("PSK.Model.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSK.Model.Entities.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSK.Model.Entities.Employee", b =>
                {
                    b.HasOne("PSK.Model.Entities.Employee", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId");
                });

            modelBuilder.Entity("PSK.Model.Entities.EmployeeRestriction", b =>
                {
                    b.HasOne("PSK.Model.Entities.Employee", "Employee")
                        .WithMany("EmployeeRestrictions")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSK.Model.Entities.Restriction", "Restriction")
                        .WithMany("RestrictionEmployees")
                        .HasForeignKey("RestrictionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSK.Model.Entities.EmployeesToken", b =>
                {
                    b.HasOne("PSK.Model.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSK.Model.Entities.IncomingEmployee", b =>
                {
                    b.HasOne("PSK.Model.Entities.Employee", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSK.Model.Entities.Recommendation", b =>
                {
                    b.HasOne("PSK.Model.Entities.Employee", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSK.Model.Entities.Employee", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSK.Model.Entities.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSK.Model.Entities.Restriction", b =>
                {
                    b.HasOne("PSK.Model.Entities.Employee", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PSK.Model.Entities.Topic", b =>
                {
                    b.HasOne("PSK.Model.Entities.Topic", "ParentTopic")
                        .WithMany()
                        .HasForeignKey("ParentTopicId");
                });

            modelBuilder.Entity("PSK.Model.Entities.TopicCompletion", b =>
                {
                    b.HasOne("PSK.Model.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSK.Model.Entities.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
